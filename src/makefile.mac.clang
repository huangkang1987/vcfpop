INCLUDE    = -I$(shell brew --prefix zlib)/include -I$(shell brew --prefix armadillo)/include -I$(shell brew --prefix gcem)/include -L$(shell brew --prefix libomp)/include -I/usr/local/include -I/usr/include

CC         = $(shell brew --prefix llvm)/bin/clang++

LIB        = -L$(shell brew --prefix zlib)/lib -L$(shell brew --prefix armadillo)/lib -L$(shell brew --prefix libomp)/lib -L/usr/lib -L/usr/local/lib

FLAGS      = -DNDEBUG -DCUDAx -DCUDA_NDEBUG -DENABLE_RELATEDNESS -fpermissive -pthread -O3 -w -m64 -fopenmp -std=c++20 -ffp-contract=off

HEADER     = vcfpop.h

OBJ        = vcfpop.o dre.o ml.o ml2.o mlbin.o mom.o mom2.o global.o hash.o math2.o mathSSE.o mathNEO.o mathAVX.o math512.o parameters.o misc.o file.o string2.o statistics.o matrix.o spa.o ploidyinfer.o function.o load.o filter.o diversity.o slide.o haplotype.o conversion.o indstat.o dist.o pcoa.o clustering.o diff.o kinship.o relatedness.o amova.o popas.o structure.o structureSSE.o structureNEO.o structureAVX.o structure512.o ad.o menu.o structureCUDA.o decay.o block.o gwas.o

BIN_PATH   = ../bin/

TARGET     = vcfpop

LIBZ       = $(shell brew --prefix zlib)/lib/libz.a

LIBOBLAS   = -framework Accelerate

vcfpop: $(OBJ)
	$(CC) $(INCLUDE) $(OBJ) $(LIB) -m64 -fopenmp -march=native -DNDEBUG -DENABLE_RELATEDNESS -pthread $(LIBZ) $(LIBOBLAS) -lm -ldl -o vcfpop

structureCUDA.o : structureCUDA.cpp $(HEADER) 
	$(CC) $(INCLUDE) $(FLAGS) -c structureCUDA.cpp

decay.o: decay.cpp $(HEADER) 
	$(CC) $(INCLUDE) $(FLAGS) -c decay.cpp

block.o: block.cpp $(HEADER) 
	$(CC) $(INCLUDE) $(FLAGS) -c block.cpp

gwas.o: gwas.cpp $(HEADER) 
	$(CC) $(INCLUDE) $(FLAGS) -c gwas.cpp

vcfpop.o: vcfpop.cpp $(HEADER) 
	$(CC) $(INCLUDE) $(FLAGS) -c vcfpop.cpp

dre.o: dre.cpp $(HEADER) 
	$(CC) $(INCLUDE) $(FLAGS) -c dre.cpp

ml.o: ml.cpp $(HEADER) 
	$(CC) $(INCLUDE) $(FLAGS) -c ml.cpp

ml2.o: ml2.cpp $(HEADER) 
	$(CC) $(INCLUDE) $(FLAGS) -c ml2.cpp

mlbin.o: mlbin.cpp $(HEADER) 
	$(CC) $(INCLUDE) $(FLAGS) -c mlbin.cpp

mom.o: mom.cpp $(HEADER) 
	$(CC) $(INCLUDE) $(FLAGS) -c mom.cpp

mom2.o: mom2.cpp $(HEADER) 
	$(CC) $(INCLUDE) $(FLAGS) -c mom2.cpp

matrix.o: matrix.cpp $(HEADER) 
	$(CC) $(INCLUDE) $(FLAGS) -c matrix.cpp

global.o: global.cpp $(HEADER) 
	$(CC) $(INCLUDE) $(FLAGS) -c global.cpp

hash.o: hash.cpp $(HEADER) 
	$(CC) $(INCLUDE) $(FLAGS) -c hash.cpp

math2.o: math2.cpp $(HEADER) 
	$(CC) $(INCLUDE) $(FLAGS) -c math2.cpp

mathNEO.o: mathNEO.cpp $(HEADER) 
	$(CC) $(INCLUDE) $(FLAGS) -c mathNEO.cpp

mathSSE.o: mathSSE.cpp $(HEADER) 
	$(CC) $(INCLUDE) $(FLAGS) -c mathSSE.cpp

mathAVX.o: mathAVX.cpp $(HEADER) 
	$(CC) $(INCLUDE) $(FLAGS) -c mathAVX.cpp

math512.o: math512.cpp $(HEADER) 
	$(CC) $(INCLUDE) $(FLAGS) -c math512.cpp

parameters.o: parameters.cpp $(HEADER) 
	$(CC) $(INCLUDE) $(FLAGS) -c parameters.cpp

misc.o: misc.cpp $(HEADER) 
	$(CC) $(INCLUDE) $(FLAGS) -c misc.cpp

file.o: file.cpp $(HEADER) 
	$(CC) $(INCLUDE) $(FLAGS) -c file.cpp

string2.o: string2.cpp $(HEADER) 
	$(CC) $(INCLUDE) $(FLAGS) -c string2.cpp

statistics.o: statistics.cpp $(HEADER) 
	$(CC) $(INCLUDE) $(FLAGS) -c statistics.cpp

spa.o: spa.cpp $(HEADER) 
	$(CC) $(INCLUDE) $(FLAGS) -c spa.cpp

ploidyinfer.o: ploidyinfer.cpp $(HEADER) 
	$(CC) $(INCLUDE) $(FLAGS) -c ploidyinfer.cpp

function.o: function.cpp $(HEADER) 
	$(CC) $(INCLUDE) $(FLAGS) -c function.cpp

load.o: load.cpp $(HEADER) 
	$(CC) $(INCLUDE) $(FLAGS) -c load.cpp

filter.o: filter.cpp $(HEADER) 
	$(CC) $(INCLUDE) $(FLAGS) -c filter.cpp

diversity.o: diversity.cpp $(HEADER) 
	$(CC) $(INCLUDE) $(FLAGS) -c diversity.cpp

slide.o: slide.cpp $(HEADER) 
	$(CC) $(INCLUDE) $(FLAGS) -c slide.cpp

haplotype.o: haplotype.cpp $(HEADER) 
	$(CC) $(INCLUDE) $(FLAGS) -c haplotype.cpp

conversion.o: conversion.cpp $(HEADER) 
	$(CC) $(INCLUDE) $(FLAGS) -c conversion.cpp

indstat.o: indstat.cpp $(HEADER) 
	$(CC) $(INCLUDE) $(FLAGS) -c indstat.cpp

dist.o: dist.cpp $(HEADER) 
	$(CC) $(INCLUDE) $(FLAGS) -c dist.cpp

pcoa.o: pcoa.cpp $(HEADER) 
	$(CC) $(INCLUDE) $(FLAGS) -c pcoa.cpp

clustering.o: clustering.cpp $(HEADER) 
	$(CC) $(INCLUDE) $(FLAGS) -c clustering.cpp

diff.o: diff.cpp $(HEADER) 
	$(CC) $(INCLUDE) $(FLAGS) -c diff.cpp

kinship.o: kinship.cpp $(HEADER) 
	$(CC) $(INCLUDE) $(FLAGS) -c kinship.cpp

relatedness.o: relatedness.cpp $(HEADER) 
	$(CC) $(INCLUDE) $(FLAGS) -c relatedness.cpp

amova.o: amova.cpp $(HEADER) 
	$(CC) $(INCLUDE) $(FLAGS) -c amova.cpp

popas.o: popas.cpp $(HEADER) 
	$(CC) $(INCLUDE) $(FLAGS) -c popas.cpp

structure.o: structure.cpp $(HEADER) 
	$(CC) $(INCLUDE) $(FLAGS) -c structure.cpp

structureNEO.o: structureNEO.cpp $(HEADER) 
	$(CC) $(INCLUDE) $(FLAGS) -c structureNEO.cpp

structureSSE.o: structureSSE.cpp $(HEADER) 
	$(CC) $(INCLUDE) $(FLAGS) -c structureSSE.cpp

structureAVX.o: structureAVX.cpp $(HEADER) 
	$(CC) $(INCLUDE) $(FLAGS) -c structureAVX.cpp

structure512.o: structure512.cpp $(HEADER) 
	$(CC) $(INCLUDE) $(FLAGS) -c structure512.cpp

ad.o: ad.cpp $(HEADER) 
	$(CC) $(INCLUDE) $(FLAGS) -c ad.cpp

menu.o: menu.cpp $(HEADER) 
	$(CC) $(INCLUDE) $(FLAGS) -c menu.cpp
	
install: $(TARGET)
	cp $(TARGET) $(BIN_PATH)
	
clean:
	rm -rf $(TARGET) $(OBJ)
